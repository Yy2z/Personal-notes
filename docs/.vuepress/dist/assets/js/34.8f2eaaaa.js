(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{552:function(t,r,s){"use strict";s.r(r);var a=s(4),e=Object(a.a)({},function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("在上个项目快结束的时候都马上春节了，于是就。。。拖到现在记录一下这个坑。")]),t._v(" "),s("h2",{attrs:{id:"图片加载不出来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片加载不出来","aria-hidden":"true"}},[t._v("#")]),t._v(" 图片加载不出来")]),t._v(" "),s("p",[s("strong",[t._v("问题描述")]),t._v("：在vue脚手架打包静态资源后首页的一些图片不能正确显示，有一两张又能正确显示，图标也能正常显示。")]),t._v(" "),s("p",[t._v("于是我去找看看每个图片的引用路径对不对，我把图片是放在"),s("strong",[t._v("scr")]),t._v("下"),s("strong",[t._v("assets")]),t._v("文件夹里面的，logo一些图标是放在public下面的图片文件夹里的。")]),t._v(" "),s("p",[t._v("在显示的是：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://photo.yujunyan.xyz/2022-11-13-1.png",alt:""}})]),t._v(" "),s("p",[t._v("然后我去搜索了一下，得知：")]),t._v(" "),s("p",[t._v("webpack在进行打包的时候，会对小图片进行{% label base64 %}转码。\n默认对于小于8k的图片，会将图片转成base64直接插入图片，不会再在dist目录生成新图片。对于大于8k的图片，会打包进dist目录，之后将新图片地给src。")]),t._v(" "),s("p",[t._v("而我在上述测试中使用的图片，是vue-cli自带的一张logo图片，大小是6.69k。按照默认的打包规则，是会转成base64，嵌入图片中的。")]),t._v(" "),s("blockquote",[s("p",[t._v("为什么会进行转码呢？")])]),t._v(" "),s("p",[t._v("加载一张图片时会发起一次http请求，http请求每次建立都会需要一定的时间，对于加载一张小图来说，下载图片所需的时间会比建立http请求的时间要短，所以对小图进行base64转码是优化http请求，保证页面加速渲染，加快页面加载速度。")]),t._v(" "),s("p",[t._v("但这也好像和图片不显示没关系啊，然后我发现这些放在public下面的图片都能正常显示，而在assets文件夹下面的图片却不能显示。")]),t._v(" "),s("p",[t._v("原来public中的资源不会经过webpack处理，而是直接放到打包后的项目根目录下面。")]),t._v(" "),s("p",[t._v("那为什么我assets下面的图片又有两张能正常显示呢？我发现这两张图片没用动态绑定，凡是用了动态绑定的图片都没有显示出来。我去搜索了一下，发现需要结合"),s("strong",[t._v("require")]),t._v("使用")]),t._v(" "),s("h2",{attrs:{id:"为什么需要用require呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要用require呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么需要用require呢？")]),t._v(" "),s("p",[t._v("require是什么")]),t._v(" "),s("blockquote",[s("p",[t._v("是一个node方法，用于引入模块，JSON或本地文件")])]),t._v(" "),s("p",[t._v("我们都知道vue最终是通过webpack打包的，并且会在webpack配置文件中编写一系列打包规则。而webpack中的打包规则，针对的其实是一个一个模块，换而言之webpack只会对模块进行打包。那webpack怎么将图片当成一个模块呢，这就要用到{% label require %}。")]),t._v(" "),s("p",[t._v("当我们使用require方法引入一张图片的时候，webpack会将这张图片当成一个模块，并根据配置文件中的规则进行打包。我们可以将require当成一个桥梁，使用了require方法引入的资源，该资源就会当成模块并根据配置文件进行打包，并返回最终的打包结果。")]),t._v(" "),s("h2",{attrs:{id:"为什么加上require能正确的引入资源呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么加上require能正确的引入资源呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么加上require能正确的引入资源呢？")]),t._v(" "),s("p",[t._v("因为动态添加的src，编译过后的文件地址和被编译过后的资源文件地址不一致，从而无法正确引入资源。而使用require，返回的就是资源文件被编译后的文件地址，从而可以正确的引入资源")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue文件中使用require动态的引入一张图片")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"home"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 使用require动态引入图片 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"require('../assets/logo.png')\"")]),t._v(" alt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最终编译的结果")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这张图片是可以被正确打开的")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/img/logo.6c137b82.png"')]),t._v(" alt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("assets中资源会经过webpack打包，小图片转成base64以减少http请求")]),t._v(" "),s("li",[t._v("public中的资源不会经过webpack处理，而是直接放到打包后的项目根目录下")]),t._v(" "),s("li",[t._v("动态引入图片需要使用require，通过require方法拿到的文件地址，是资源文件编译过后的文件地址，可以正确的引入资源")]),t._v(" "),s("li",[t._v("虽然public文件不会被编译，但是src下的文件都会被编译。由于引入的是public下的资源，不会走require，会直接返回代码中的定义的文件地址，该地址无法在编译后的文件目录（dist目录）下找到对应的文件，会导致引入资源失败。")])]),t._v(" "),s("hr")])},[],!1,null,null,null);r.default=e.exports}}]);